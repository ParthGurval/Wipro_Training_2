

Linux 


History:


What is linux:


Linux Distribution:


Types of Linux Distribution:


Linux Commands:

Here is a list of basic Linux commands with short explanations for each:

1. `ls`:
   - Description: Lists directory contents.
   - Example: `ls /home/user` shows files and folders in the specified directory.

2. `cd`:
   - Description: Changes the current directory.
   - Example: `cd /home/user` changes to the specified directory.

3. `pwd`:
   - Description: Prints the current working directory.
   - Example: `pwd` shows the full path of the current directory.

4. `mkdir`:
   - Description: Creates a new directory.
   - Example: `mkdir new_folder` creates a directory named "new_folder".

5. `rmdir`:
   - Description: Removes an empty directory.
   - Example: `rmdir old_folder` deletes the directory named "old_folder" if it's empty.

6.	`echo`:
    - Description: Displays a line of text.
    - Example: `echo "Hello, world!"` prints "Hello, world!" to the terminal.

6. `rm`:
   - Description: Removes files or directories.
   - Example: `rm file.txt` deletes the file named "file.txt".

7. `cp`:
   - Description: Copies files or directories.
   - Example: `cp source.txt destination.txt` copies "source.txt" to "destination.txt".

8. `mv`:
   - Description: Moves or renames files or directories.
   - Example: `mv oldname.txt newname.txt` renames "oldname.txt" to "newname.txt".

9. `touch`:
   - Description: Creates an empty file or updates the timestamp of an existing file.
   - Example: `touch newfile.txt` creates an empty file named "newfile.txt".

10. `cat`:
    - Description: Concatenates and displays file content.
    - Example: `cat file.txt` displays the contents of "file.txt".

11. `more`:
    - Description: Views file content one screen at a time.
    - Example: `more file.txt` displays "file.txt" content page by page.

12. `less`:
    - Description: Similar to `more`, but allows backward movement in the file as well.
    - Example: `less file.txt` displays "file.txt" content with navigation capabilities.

13. `head`:
    - Description: Displays the first few lines of a file.
    - Example: `head -n 10 file.txt` shows the first 10 lines of "file.txt".

14. `tail`:
    - Description: Displays the last few lines of a file.
    - Example: `tail -n 10 file.txt` shows the last 10 lines of "file.txt".

15. `grep`:
    - Description: Searches for patterns within files.
    - Example: `grep "search_term" file.txt` finds "search_term" in "file.txt".

16. `find`:
    - Description: Searches for files and directories.
    - Example: `find /home/user -name "file.txt"` searches for "file.txt" in the specified directory.

17. `chmod`:
    - Description: Changes file permissions.
    - Example: `chmod 755 script.sh` sets the permissions of "script.sh".

18. `chown`:
    - Description: Changes file ownership.
    - Example: `chown user:group file.txt` changes the owner and group of "file.txt".

19. `ps`:
    - Description: Displays currently running processes.
    - Example: `ps aux` shows all running processes with detailed information.

20. `kill`:
    - Description: Terminates processes.
    - Example: `kill 1234` stops the process with PID 1234.

21. `top`:
    - Description: Displays real-time system resource usage.
    - Example: `top` shows CPU, memory usage, and active processes.

22. `df`:
    - Description: Reports file system disk space usage.
    - Example: `df -h` displays disk usage in a human-readable format.

23. `du`:
    - Description: Estimates file space usage.
    - Example: `du -sh /home/user` shows the size of the specified directory.

24. `ifconfig`:
    - Description: Configures network interfaces.
    - Example: `ifconfig eth0` displays information about the "eth0" network interface.

25. `ping`:
    - Description: Tests network connectivity.
    - Example: `ping google.com` sends packets to "google.com" to check connectivity.

26. `wget`:
    - Description: Downloads files from the internet.
    - Example: `wget http://example.com/file.zip` downloads "file.zip" from the specified URL.

27. `tar`:
    - Description: Archives files.
    - Example: `tar -czvf archive.tar.gz /path/to/directory` creates a compressed archive of the specified directory.

28. `gzip`:
    - Description: Compresses files.
    - Example: `gzip file.txt` compresses "file.txt" to "file.txt.gz".

29. `unzip`:
    - Description: Extracts compressed files.
    - Example: `unzip archive.zip` extracts "archive.zip".

30. `ssh`:
    - Description: Connects to remote machines securely.
    - Example: `ssh user@remote_host` initiates an SSH connection to the specified host.

31. `scp`:
    - Description: Copies files between hosts securely.
    - Example: `scp file.txt user@remote_host:/path/to/destination` copies "file.txt" to the remote host.

32. `nano`:
    - Description: Edits files using the nano text editor.
    - Example: `nano file.txt` opens "file.txt" for editing in nano.

33. `vim`:
    - Description: Edits files using the Vim text editor.
    - Example: `vim file.txt` opens "file.txt" for editing in Vim.

34. `man`:
    - Description: Displays the manual pages for commands.
    - Example: `man ls` shows the manual page for the "ls" command.

36. `export`:
    - Description: Sets environment variables.
    - Example: `export PATH=$PATH:/new/path` adds "/new/path" to the system's PATH.

37. `sudo`:
    - Description: Executes a command with superuser privileges.
    - Example: `sudo apt-get update` runs the "apt-get update" command with superuser privileges.

These commands are fundamental tools for navigating and managing files, processes, and systems in a Linux environment.








Working directory – pwd 
List of files and folders in the current directory – ls 
Navigate between folder – cd 
foldername To go one layer before – cd .. or cd / 
Copy the files to the same location : cp filename newfilename 
To delete the files - rm filename 
To copy the files from one location to other cp filename /home/rps/desktop 
Create new folder: mkdir foldername 
Delete the empty folder : rmdir or rm -r folder name 
Folder is not empty will be displayed if u try to delete the folder which is not empty 
Move file from one location to other mv [file name] [new location] 
To delete a file – rm file name 
Delete all files rm -rf * 
Create new files – touch filename.txt 
Create text echo “text” >filename.txt 
The difference between > and >> is that > overwrites the file if it exists whereas >> appends to the existing file. 
/root – parent directory, accessible to root 
/bin – this is where all types of binaries resid